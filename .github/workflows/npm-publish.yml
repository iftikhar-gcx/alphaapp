name: NextJS Build Pipeline

on:
  push:
    branches:
      - master

jobs:
  job1:
    name: This is Job1
    runs-on: ubuntu-latest
    steps:
      - name: Echo the Job - Job1
        run: echo "Job1 - First Step"

      - name: Create a file - Job1
        run: echo "Job 1 text content" > job1.txt

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
          name: my_artifacts

          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: job1.txt

          # The desired behavior if no files are found using the provided path.
          # Available Options:
          #   warn: Output a warning but do not fail the action
          #   error: Fail the action with an error message
          #   ignore: Do not output any warnings or errors, the action does not fail
          # Optional. Default is 'warn'
          if-no-files-found: warn

          # Duration after which artifact will expire in days. 0 means using default retention.
          # Minimum 1 day.
          # Maximum 90 days unless changed from the repository settings page.
          # Optional. Defaults to repository settings.
          retention-days: 0

          # The level of compression for Zlib to be applied to the artifact archive.
          # The value can range from 0 to 9.
          # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
          # Optional. Default is '6'
          compression-level: 9

          # If true, an artifact with a matching name will be deleted before a new one is uploaded.
          # If false, the action will fail if an artifact for the given name already exists.
          # Does not fail if the artifact does not exist.
          # Optional. Default is 'false'
          overwrite: true


  job2:
    name: This is Job2
    runs-on: ubuntu-latest
    steps:
      - name: Create a Fuke - Job2
        run: echo "Job 2 text content" > job2.txt
      
      - name: Verift the file - Job2
        run: ls -l job2.txt

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          # Name of the artifact to download.
          # If unspecified, all artifacts for the run are downloaded.
          # Optional.
          name: my_artifacts

          # Destination path. Supports basic tilde expansion.
          # Optional. Default is $GITHUB_WORKSPACE
          path: $GITHUB_WORKSPACE

          # A glob pattern to the artifacts that should be downloaded.
          # Ignored if name is specified.
          # Optional.
          # pattern:

          # When multiple artifacts are matched, this changes the behavior of the destination directories.
          # If true, the downloaded artifacts will be in the same directory specified by path.
          # If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
          # Optional. Default is 'false'
          merge-multiple: false

          # The GitHub token used to authenticate with the GitHub API.
          # This is required when downloading artifacts from a different repository or from a different workflow run.
          # Optional. If unspecified, the action will download artifacts from the current repo and the current workflow run.
          github-token:

          # The repository owner and the repository name joined together by "/".
          # If github-token is specified, this is the repository that artifacts will be downloaded from.
          # Optional. Default is ${{ github.repository }}
          repository: ${{ github.repository }}

          # The id of the workflow run where the desired download artifact was uploaded from.
          # If github-token is specified, this is the run that artifacts will be downloaded from.
          # Optional. Default is ${{ github.run_id }}
          run-id: ${{ github.run_id }}


  job3:
    name: This is job3
    runs-on: ubuntu-latest
    needs: [job1, job2]
    steps:
      - name: Check the files are created
        run: ls -l